<?php
/**
 * @file
 * Code for the ICT PAges feature.
 */

include_once 'ict_pages.features.inc';


/**
 * Implements hook_ctools_plugin_directory().
 */
function ict_pages_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Implements hook_theme().
 */
function ict_pages_theme($existing, $type, $theme, $path) {
  return array(
    'ict_pages_last_update' => array(
      'template' => 'ict-pages-last-update',
      'path' => drupal_get_path('module', 'ict_pages') . '/theme',
    ),
  );
}

function template_preprocess_ict_pages_last_update(&$vars) {
  $query = db_select('project_workflow', 'wf');
  $query->addField('wf', 'created');
  $query->condition('wf.state', 'approved');
  if (!empty($vars['nid']) && is_numeric($vars['nid'])) {
    $nid = $vars['nid'];

    $query->condition('wf.nid', $nid);

    $last_rebaseline = ict_project_get_last_rebaseline_project($nid);
    $old_rebaselines = ict_project_get_old_baselines($last_rebaseline);
    $vars['last_rebaseline'] = $last_rebaseline;
    $vars['projects'] = count($old_rebaselines) + 1;
  }
  $query->orderBy('created', 'DESC');
  $query->range(0, 1);
  $result = $query->execute()->fetchField();

  // we should show unapproved baselines for
  if (!$result && !empty($vars['nid'])) {
    $node = node_load($vars['nid']);
    if (!empty($node->type) && $node->type == 'project') {
      $result = $node->changed;
    }
  }
  $vars['result'] = $result;
}

/**
 * Implements hook_form_alter().
 */
function ict_pages_form_alter (&$form, &$form_alter, $form_id) {
  switch ($form_id) {
    case 'user_login':
        if (drupal_is_front_page()) {
          break;
        }

        $help_text = '';
        $bean = bean_load_delta('sign-in-helptext');
        if ($bean) {
          $bean_view = bean_view($bean);
          $help_text = drupal_render($bean_view);
        }

        $form['#prefix'] = '
          <div class="page-title dotbg">
            <div class="inner-title-content wrap cf">
              <h1>' . t('User Account') . '</h1>
            </div>
          </div>
          <div id="inner-content" class="wrap cf">

          <div class="signin-request">
            <ul class="tab-head cf">
              <li><a href="' . url('user') . '" class="active">Sign in</a></li>
              <li><a href="' . url('user/password') . '" class="">Request new password</a></li>
            </ul>
            <div class="tab-content d-1of2">
            <div class="tab active">
        ' . $help_text;

        $form['name']['#description'] = '';
        $form['pass']['#description'] = '';
        $form['pass']['#custom_structure'] = TRUE;
        $form['name']['#custom_structure'] = TRUE;

        $form['actions']['submit']['#prefix'] = '<p class="submit">';
        $form['actions']['submit']['#suffix'] = '</p>';
        $form['#attributes']['class'][] = 'signin';


        $form['#suffix'] = '</div></div></div></div>';
      break;
    case 'user_pass':
      if (drupal_is_front_page()) {
        break;
      }
      $form['#prefix'] = '
          <div class="page-title dotbg">
            <div class="inner-title-content wrap cf">
              <h1>' . t('User Account') . '</h1>
            </div>
          </div>
          <div id="inner-content" class="wrap cf">

          <div class="signin-request">
            <ul class="tab-head cf">
              <li><a href="' . url('user') . '">Sign in</a></li>
              <li><a href="' . url('user/password') . '" class="active">Request new password</a></li>
            </ul>
            <div class="tab-content d-1of2">
            <div class="tab active">
        ';

      $form['name']['#description'] = '';
      $form['pass']['#description'] = '';
      $form['pass']['#custom_structure'] = TRUE;
      $form['name']['#custom_structure'] = TRUE;

      $form['actions']['submit']['#prefix'] = '<p class="submit">';
      $form['actions']['submit']['#suffix'] = '</p>';
      $form['#attributes']['class'][] = 'request';


      $form['#suffix'] = '</div></div></div></div>';
      break;

    case 'user_register_form':
      if (drupal_is_front_page()) {
        break;
      }
      $form['#prefix'] = '
          <div class="page-title dotbg">
            <div class="inner-title-content wrap cf">
              <h1>' . t('Register') . '</h1>
            </div>
          </div>
          <div id="inner-content" class="wrap cf">
            <h2>' . t('Create a new account') . '</h2>
            <div class="register-form d-1of2">
        ';

      $form['account']['name']['#description'] = '';
      $form['account']['name']['#custom_structure'] = TRUE;
      $form['account']['mail']['#custom_structure'] = TRUE;
      $form['account']['mail']['#title'] = t('Email address');
      $form['field_organisations'][LANGUAGE_NONE]['#title_display'] = 'invisible';
      $form['field_organisations'][LANGUAGE_NONE]['#custom_structure'] = '<p><label>Organisations <span>*</span></label><span class="select">  </span></p>';

      $form['#suffix'] = '</div></div>';
      break;
    case 'user_profile_form':
      $form['picture']['#access'] = FALSE;
      $form['account']['name']['#custom_structure'] = TRUE;
      $form['account']['pass']['#custom_structure'] = TRUE;
      $form['account']['mail']['#custom_structure'] = TRUE;
      $form['field_organisations']['und']['#custom_structure'] = TRUE;
      $form['account']['current_pass_required_values']['#custom_structure'] = TRUE;
      $form['account']['current_pass']['#custom_structure'] = TRUE;
      $form['#prefix'] = '<div id="inner-content" class="wrap cf">
                            <h2>Edit user account</h2>
                                <div class="register-form d-1of2">';
      $form['#suffix'] = '</div></div></div>';

      break;
  }
}

/**
 * Hook to register the CKEditor plugin - it would appear in the plugins list on the profile setting page.
 */
function ict_pages_ckeditor_plugin() {
  return array(
    'word_count' => array(
      // Name of the plugin used to write it.
      'name' => 'wordcount',
      // Description of the plugin - it would be displayed in the plugins management section of profile settings.
      'desc' => t('This is a word count plugin'),
      // The full path to the CKEditor plugins directory, with the trailing slash.
      'path' => drupal_get_path('module', 'ict_pages') . '/plugins/ckeditor/wordcount/',
    ),
    'notification' => array(
      // Name of the plugin used to write it.
      'name' => 'notification',
      // Description of the plugin - it would be displayed in the plugins management section of profile settings.
      'desc' => t('This is a notification plugin'),
      // The full path to the CKEditor plugins directory, with the trailing slash.
      'path' => drupal_get_path('module', 'ict_pages') . '/plugins/ckeditor/notification/',
    ),

  );
}