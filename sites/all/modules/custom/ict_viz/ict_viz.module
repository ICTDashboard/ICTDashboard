<?php
/**
 * @file
 * Code for the ICT VIZ feature.
 */

include_once 'ict_viz.features.inc';
/**
 * @file
 * Code for the ICT Update feature.
 */

include_once 'ict_viz.inc';

/**
 * @file
 * Code for the ICT VIZ feature.
 */

/**
 * Implements hook_ctools_plugin_directory().
 */
function ict_viz_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && in_array($plugin_type, array('content_types', 'access'))) {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Implements hook_theme().
 */
function ict_viz_theme($existing, $type, $theme, $path) {
  return array(
    'ict_viz_home_projects' => array(
      'template' => 'ict-viz-home-projects',
      'path' => drupal_get_path('module', 'ict_viz') . '/theme',
    ),
    'ict_viz_filtered_projects' => array(
      'template' => 'ict-viz-filtered-projects',
      'path' => drupal_get_path('module', 'ict_viz') . '/theme',
    ),
    'ict_viz_number_indicators' => array(
      'path' => drupal_get_path('module', 'ict_viz') . '/theme',
      'template' => 'ict-viz-number-indicators',
    ),
    'ict_viz_detailed_overview' => array(
      'path' => drupal_get_path('module', 'ict_viz') . '/theme',
      'template' => 'ict-viz-detailed-overview',
    ),
  );
}

function template_preprocess_ict_viz_home_projects(&$vars) {
  $get = $_GET;
  unset($get['q']);
  $col_classes = array(
    array(),
    array(),
    array(),
    array(),
    array(),
  );

  drupal_add_js(drupal_get_path('module', 'ict_viz') . '/js/projects_viz_table.js');

  // Get available statuses
  $statuses_info = field_info_field('field_schedule_status_calc');
  $vars['statuses'] = $statuses_info['settings']['allowed_values'];

  // Project query
  $query = db_select('node', 'project');
  $query->distinct();
  $query->join('field_data_field_project', 'update_node', 'project.nid = update_node.field_project_target_id');
  $query->leftJoin('field_data_field_expenditure_budget_calc', 'budget', 'project.nid = budget.entity_id');
  $query->leftJoin('field_data_field_expenditure_to_date_calc', 'to_date', 'project.nid = to_date.entity_id');
  $query->leftJoin('field_data_field_number_of_benefits_calc', 'benefits', 'project.nid = benefits.entity_id');
  $query->leftJoin('field_data_field_schedule_status_calc', 'status', 'project.nid = status.entity_id');
  $query->leftJoin('field_data_field_department', 'dep', 'project.nid = dep.entity_id');
  $query->leftJoin('taxonomy_term_data', 'term', 'dep.field_department_tid = term.tid');
  $query->leftJoin('field_data_field_abbreviation', 'abbr', 'term.tid = abbr.entity_id');
  $query->join('project_workflow', 'workflow', 'update_node.entity_id = workflow.nid');
  $query->fields('project');
  $query->addField('term', 'tid', 'dep_tid');
  $query->addField('budget', 'field_expenditure_budget_calc_value');
  $query->addField('to_date', 'field_expenditure_to_date_calc_value');
  $query->addField('benefits', 'field_number_of_benefits_calc_value');
  $query->addField('status', 'field_schedule_status_calc_value');
  $query->addExpression('IF(LENGTH(abbr.field_abbreviation_value) > 0, field_abbreviation_value, term.name)', 'dep_name');
  $query->condition('workflow.state', 'approved');
  $query->condition('project.type', 'project');

  // Sorting options
  $sorting = array(
    'dep_name' => 'dep_name',
    'title' => 'title',
    'budget' => 'to_date.field_expenditure_to_date_calc_value',
    'benefits' => 'benefits.field_number_of_benefits_calc_value',
    'status' => 'status.field_schedule_status_calc_value',
  );

  $sorting_labels = array(
    'dep_name' => t('Entity'),
    'title' => t('Title'),
    'budget' => t('Expenditure to Date'),
    'benefits' => t('No. of Benefits'),
    'status' => t('Project Schedule Status'),
  );

  $direction = isset($get['direction']) ? $get['direction'] : 'desc';
  if (isset($sorting[$get['order']])) {
    $table_header = t('Projects by @LABEL', array('@LABEL' => $sorting_labels[$get['order']]));
    $query->orderBy($sorting[$get['order']], $direction);
    $col_classes[array_search($get['order'], array_keys($sorting))][] = 'current_sort';
  }
  else {
    $table_header = t('Recent Projects');
    $query->orderBy('created', $direction);
  }
  $vars['table_header'] = $table_header;

  // Pager configs
  $count = $query->execute()->rowCount();
  $pager = array(
    '10' => '10',
    '25' => '25',
    '50' => '50',
    '0' => '0',
  );
  $per_page = isset($get['per_page']) && isset($pager[$get['per_page']]) ? $pager[$get['per_page']] : reset($pager);
  $page = pager_default_initialize($count, $per_page);
  $vars['pager'] = array(
    '#title' => t('Display'),
    '#type' => 'select',
    '#options' => $pager,
    '#value' => $per_page,
    '#attributes' => array('class' => array('ict-projects-table-perpage')),
  );
  $vars['pager']['#options']['0'] = 'All';
  if ($per_page) {
    $query->range($page * $per_page,$per_page);
  }

  // Get results
  $results = $query->execute()->fetchAll();
  foreach ($results as &$row) {
    $div = $row->field_expenditure_to_date_calc_value/$row->field_expenditure_budget_calc_value;
    if ($div <= 1) {
      $row->to_date_percent = $div * 100;
      $row->budget_percent = 100;
    }
    else {
      $row->to_date_percent = 100;
      $row->budget_percent = 100 / $div;
    }
  }
  $vars['results'] = $results;

  $vars['col_classes'] = array_map(function($var) { return implode(' ', $var); }, $col_classes);

  $tmp_get = $get;
  unset($tmp_get['per_page']);
  drupal_add_js(array('ict' => array('base_path' => url(current_path(), array('query' => $tmp_get)))), 'setting');

  $direction = isset($get['direction']) && $get['direction'] == 'desc' ? 'asc' : 'desc';
  $get['direction'] = $direction;
  $vars['query'] = $get;
}

function template_preprocess_ict_viz_filtered_projects(&$vars) {
  $get = $_GET;
  unset($get['q']);
  $col_classes = array(
    array(),
    array(),
    array(),
    array(),
    array(),
    array(),
    array(),
    array(),
  );

  // Get available statuses
  $statuses_info = field_info_field('field_schedule_status_calc');
  $vars['statuses'] = $statuses_info['settings']['allowed_values'];

  $subquery = db_select('field_data_field_project', 'pr');
  $subquery->addField('pr', 'field_project_target_id', 'project_id');
  $subquery->addExpression('MAX(entity_id)', 'update_id');
  $subquery->join('project_workflow', 'wf', 'wf.nid = entity_id AND state = :state', array(':state' => 'approved'));
  $subquery->groupBy('field_project_target_id');

  // Project query
  $query = db_select('node', 'project');
  $query->join($subquery, 'last_upd', 'last_upd.project_id = project.nid');
  $query->leftJoin('field_data_field_expenditure_budget_calc', 'budget', 'project.nid = budget.entity_id');
  $query->leftJoin('field_data_field_start_date', 'o_comp_date', 'project.nid = o_comp_date.entity_id');
  $query->leftJoin('field_data_field_schedule_status_calc', 'status', 'project.nid = status.entity_id');
  $query->leftJoin('field_data_field_actual_level_of_project_co', 'level', 'update_id = level.entity_id');
  $query->leftJoin('field_data_field_expected_completion_date', 'exp_comp_date', 'update_id = exp_comp_date.entity_id');
  $query->leftJoin('field_data_field_department', 'dep', 'project.nid = dep.entity_id');
  $query->leftJoin('taxonomy_term_data', 'term', 'dep.field_department_tid = term.tid');
  $query->leftJoin('field_data_field_abbreviation', 'abbr', 'term.tid = abbr.entity_id');
  $query->join('project_workflow', 'workflow', 'project.nid = workflow.nid AND state = :state', array(':state' => 'approved'));
  $query->fields('project');
  $query->addField('term', 'tid', 'dep_tid');
  $query->addField('budget', 'field_expenditure_budget_calc_value');
  $query->addField('level', 'field_actual_level_of_project_co_value');
  $query->addField('status', 'field_schedule_status_calc_value');
  $query->addField('exp_comp_date', 'field_expected_completion_date_value');
  $query->addField('o_comp_date', 'field_start_date_value');
  $query->addExpression('IF(LENGTH(abbr.field_abbreviation_value) > 0, field_abbreviation_value, term.name)', 'dep_name');
  $query->condition('workflow.state', 'approved');
  $query->condition('project.type', 'project');

  // Sorting options
  $sorting = array(
    'dep_name' => 'dep_name',
    'title' => 'title',
    'status' => 'status.field_schedule_status_calc_value',
    'level' => 'level.field_actual_level_of_project_co_value',
    'budget' => 'budget.field_expenditure_budget_calc_value',
    'o_comp_date' => 'o_comp_date.field_start_date_value',
    'exp_comp_date' => 'exp_comp_date.field_expected_completion_date_value',
  );

  $direction = isset($get['direction']) ? $get['direction'] : 'desc';
  if (isset($sorting[$get['order']])) {
    $query->orderBy($sorting[$get['order']], $direction);
    $col_classes[array_search($get['order'], array_keys($sorting))][] = 'current_sort';
  }
  else {
    $query->orderBy('created', $direction);
  }

  // Filtering
  $filters = array(
    'dep_name' => 'term.tid',
    'status' => 'status.field_schedule_status_calc_value',
  );
  drupal_set_title(t('Projects'));
  if (isset($get['filter_by']) && isset($get['filter_by']) && isset($filters[$get['filter_by']])) {
    $query->condition($filters[$get['filter_by']], $get['filter']);
  }

  // Get results
  $results = $query->execute()->fetchAll();
  $vars['results'] = $results;

  $filters_val = array(
    'dep_name' => 'dep_name',
    'status' => 'field_schedule_status_calc_value',
  );
  if (isset($get['filter_by']) && isset($get['filter_by']) && isset($filters_val[$get['filter_by']])) {
    $first_row = reset($results);
    $label = $first_row->{$filters_val[$get['filter_by']]};
    if ($get['filter_by'] == 'status' && isset($vars['statuses'][$label])) {
      $label = $vars['statuses'][$label];
    }
    drupal_set_title($label . ' ' . t('Projects'));
  }

  $vars['col_classes'] = array_map(function($var) { return implode(' ', $var); }, $col_classes);

  $direction = isset($get['direction']) && $get['direction'] == 'desc' ? 'asc' : 'desc';
  $get['direction'] = $direction;
  $vars['query'] = $get;
}
