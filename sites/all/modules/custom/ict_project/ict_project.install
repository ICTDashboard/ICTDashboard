<?php

/**
 * @file
 * Code for the ICT Project install functions.
 */

/**
 * Creates project_access table
 */
function ict_project_update_7301() {
  if (!db_table_exists('project_access')) {
    $project_edit_schema = array(
      'description' => 'User gained access to approve or edit projects or projects updates.',
      'fields' => array(
        'nid' => array(
          'description' => 'Node ID of the project',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE
        ),
        'uid' => array(
          'description' => 'ID of the user granted with the access',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE
        ),
        'access_type' => array(
          'description' => 'approve or edit',
          'type' => 'varchar',
          'length' => 7,
          'not null' => TRUE
        ),
        'created' => array(
          'description' => 'The Unix timestamp when the access was granted.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0
        ),
        'expires' => array(
          'description' => 'The Unix timestamp when the access was expires.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0
        ),
      ),
      'indexes' => array(
        'uid' => array('uid'),
        'nid' => array('nid')
      ),
      'foreign keys' => array(
        'user' => array(
          'table' => 'user',
          'columns' => array('uid' => 'uid'),
        ),
        'node' => array(
          'table' => 'node',
          'columns' => array('nid' => 'nid'),
        ),
      ),
      'primary key' => array('nid', 'uid', 'access_type'),
    );
    db_create_table('project_access', $project_edit_schema);
  }
  return 'Add the project_access table for the ict_project module.';
}

/**
 * Creates project_workflow table
 */
function ict_project_update_7303() {
  if (!db_table_exists('project_workflow')) {
    $project_edit_schema = array(
      'description' => 'Contains workflow states for projects, updates, rebaselines.',
      'fields' => array(
        'nid' => array(
          'description' => 'Node ID of the project',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE
        ),
        'vid' => array(
          'description' => 'Revision ID of node vid version identifier.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE
        ),
        'old_state' => array(
          'description' => 'Old workflow state',
          'type' => 'varchar',
          'length' => 32,
          'not null' => FALSE,
        ),
        'state' => array(
          'description' => 'Workflow state',
          'type' => 'varchar',
          'length' => 32,
          'not null' => TRUE
        ),
        'created' => array(
          'description' => 'The Unix timestamp when the workflow state was changed.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0
        ),
        'uid' => array(
          'description' => 'User ID.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE
        ),
      ),
      'indexes' => array(
        'nid' => array('nid'),
        'vid' => array('vid'),
        'state' => array('state'),
        'created' => array('created'),
        'uid' => array('uid'),
      ),
      'primary key' => array('nid', 'vid', 'created'),
    );
    db_create_table('project_workflow', $project_edit_schema);
  }
  return 'Add the project_workflow table for the ict_project module.';
}

/**
 * Add Comment field to Project_workflow table.
 */
function ict_project_update_7304() {
  $spec = array(
    'type' => 'text',
    'description' => "Comment for workflow transaction",
    'not null' => FALSE,
  );
  db_add_field( 'project_workflow', 'comment', $spec);
}

/**
 * Removes orphaned project_access and project_workflow records
 */
function ict_project_update_7305() {
  $query = db_select('node', 'n');
  $query->distinct();
  $query->addField('n', 'nid');
  $query->condition('n.type', array('project', 'update'), 'IN');
  $nodes = $query->execute()->fetchAllKeyed(0, 0);

  $query = db_select('project_access', 'a');
  $query->addField('a', 'nid');
  if ($nodes) {
    $query->condition('a.nid', $nodes, 'NOT IN');
  }
  $orphaned_access_records = $query->execute()->fetchAllKeyed(0, 0);

  if ($orphaned_access_records) {
    // delete workflow records
    $num_deleted = db_delete('project_access')
      ->condition('nid', $orphaned_access_records, 'IN')
      ->execute();
  }

  $query = db_select('project_workflow', 'w');
  $query->addField('w', 'nid');
  if ($nodes) {
    $query->condition('w.nid', $nodes, 'NOT IN');
  }
  $orphaned_workflow_records = $query->execute()->fetchAllKeyed(0, 0);

  if ($orphaned_workflow_records) {
    // remove approvers and editors
    $num_deleted = db_delete('project_workflow')
      ->condition('nid', $orphaned_workflow_records, 'IN')
      ->execute();
  }
  return 'Orphaned records removed';
}
