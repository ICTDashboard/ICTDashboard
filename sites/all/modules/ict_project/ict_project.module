<?php
/**
 * @file
 * Code for the ICT Project feature.
 */

include_once 'ict_project.features.inc';
require_once(DRUPAL_ROOT . "/modules/node/node.pages.inc");

/**
 * Implements hook_ctools_plugin_directory().
 */
function ict_project_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * returns add project  form
 */
function ict_project_project_add_block () {
  if (user_is_logged_in()) {
    module_load_include('inc', 'node', 'node.pages');
    $form = node_add('project');
    $form['#attached']['js'] = array(
      drupal_get_path('module', 'ict_project') . '/js/ict_project.js',
    );
    
    $form['#theme'] = 'ict_project_add_project_form';
    //hide native labels
    $form['field_government_entity_name']['und'][0]['value']['#title_display'] = $form['field_government_business_unit']['und'][0]['value']['#title_display'] =
    $form['title']['#title_display'] = $form['field_brief_project_summary']['und'][0]['value']['#title_display'] =
    $form['field_program_name']['und'][0]['value']['#title_display'] = $form['field_project_stage']['und']['#title_display'] =
    $form['field_project_category']['und']['#title_display'] = $form['field_project_manager']['und'][0]['value']['#title_display'] =
    $form['field_project_manager_email']['und'][0]['email']['#title_display'] = $form['field_total_project_budget']['und'][0]['value']['#title_display'] =
    $form['field_expected_project_benefits']['und'][0]['value']['#title_display'] = $form['field_start_date']['und'][0]['value']['day']['#title_display'] =
    $form['field_start_date']['und'][0]['value']['month']['#title_display'] = $form['field_start_date']['und'][0]['value']['year']['#title_display'] =
    $form['field_original_completion_date']['und'][0]['value']['day']['#title_display'] = $form['field_original_completion_date']['und'][0]['value']['month']['#title_display'] =
    $form['field_original_completion_date']['und'][0]['value']['year']['#title_display'] = $form['field_government_programme']['und'][0]['value']['#title_display'] =
    $form['field_implementation_partners']['und'][0]['value']['#title_display'] = $form['field_total_spent_to_date']['und'][0]['value']['#title_display'] =
    $form['field_expected_number_of_gov_fte']['und'][0]['value']['#title_display'] = $form['field_expected_num_contractors']['und'][0]['value']['#title_display'] =
      $form['field_project_users']['und']['#title_display'] = $form['field_expenditure_type']['und']['#title_display'] = $form['field_project_status']['und']['#title_display'] = $form['field_internal_fte']['und'][0]['value']['#title_display'] = $form['field_external_fte']['und'][0]['value']['#title_display'] =
      $form['field_rebaselined_total_project']['und'][0]['value']['#title_display'] = $form['field_predicted_project_benefit']['und'][0]['value']['#title_display'] =
    'invisible';

    //add 33%-width to date select elements
    $form['field_start_date']['und'][0]['value']['day']['#wrapper_class'][] = $form['field_start_date']['und'][0]['value']['month']['#wrapper_class'][] =
    $form['field_start_date']['und'][0]['value']['year']['#wrapper_class'][] = $form['field_original_completion_date']['und'][0]['value']['day']['#wrapper_class'][] =
    $form['field_original_completion_date']['und'][0]['value']['month']['#wrapper_class'][] = $form['field_original_completion_date']['und'][0]['value']['year']['#wrapper_class'][] =

    $form['field_rebaselined_project_start']['und'][0]['value']['day']['#wrapper_class'][] = $form['field_rebaselined_project_start']['und'][0]['value']['month']['#wrapper_class'][] =
    $form['field_rebaselined_project_start']['und'][0]['value']['year']['#wrapper_class'][] =

    $form['field_rebaselined_project_compl']['und'][0]['value']['day']['#wrapper_class'][] = $form['field_rebaselined_project_compl']['und'][0]['value']['month']['#wrapper_class'][] =
    $form['field_rebaselined_project_compl']['und'][0]['value']['year']['#wrapper_class'][] = 'd-1of3';


    $form['field_start_date']['und'][0]['value']['year']['#wrapper_class'][] =
    $form['field_original_completion_date']['und'][0]['value']['year']['#wrapper_class'][] =
    $form['field_rebaselined_project_start']['und'][0]['value']['year']['#wrapper_class'][] =
    $form['field_rebaselined_project_compl']['und'][0]['value']['year']['#wrapper_class'][] = 'last-col';

    $form['field_rebaselined_total_budget']['und']['#theme'] = 'ict_project_rebaselined_total_budget';
    $form['field_original_total_budget']['und']['#theme'] = 'ict_project_rebaselined_total_budget';

    //date fields (adding empty options)
    $date_fields = array(
      'field_start_date',
      'field_original_completion_date',
      'field_rebaselined_project_start',
      'field_rebaselined_project_compl',
    );

    ict_project_add_status_tooltips ($form['field_project_status']);

    foreach ($date_fields as $field) {
      $form[$field][LANGUAGE_NONE][0]['value']['day']['#options'][''] = t('Day');
      $form[$field][LANGUAGE_NONE][0]['value']['year']['#options'][''] = t('Year');
      $form[$field][LANGUAGE_NONE][0]['value']['month']['#options'][''] = t('Month');
    }

    // Start year should be set via CMS
    $start_year = variable_get('ict_dashboard_project_start_year', 13);

    foreach (element_children($form['field_rebaselined_total_budget']['und']) as $item) {
      foreach (element_children($form['field_rebaselined_total_budget']['und'][$item]) as $sub_item) {
        $form['field_rebaselined_total_budget']['und'][$item][$sub_item]['und'][0]['value']['#title_display'] = 'invisible';
      }
      $form['field_rebaselined_total_budget']['und'][$item]['field_year']['und'][0]['value']['#value'] = $start_year . '/' . ++$start_year;
    }

    // Start year should be set via CMS
    $start_year = variable_get('ict_dashboard_project_start_year', 13);

    foreach (element_children($form['field_original_total_budget']['und']) as $item) {
      foreach (element_children($form['field_original_total_budget']['und'][$item]) as $sub_item) {
        $form['field_original_total_budget']['und'][$item][$sub_item]['und'][0]['value']['#title_display'] = 'invisible';
      }
      $form['field_original_total_budget']['und'][$item]['field_year']['und'][0]['value']['#value'] = $start_year . '/' . ++$start_year;
    }

    return drupal_render($form);
  }
  else {
    drupal_not_found();
  }
}

function ict_project_add_status_tooltips (&$form) {
  $tooltips = array(
    'green' => t('The project appears likely to deliver its intended benefits, and is broadly on time and within budget.'),
    'amber' => t('The project might not deliver its intended benefits AND/OR is behind schedule AND/OR is over budget.'),
    'red' => t('The project appears unlikely to deliver its intended benefits AND/OR is significantly behind schedule AND/OR is significantly over budget.'),
  );

  foreach (element_children($form['und']) as $item) {
    $form['und'][$item]['#prefix'] = '<div class="radio-description">';
    $form['und'][$item]['#suffix'] = '<div class="description">' . $tooltips[$item] . '</div></div>';
  }

//  $form['#attached']['css'][] = drupal_get_path('module', 'ict_project') . '/css/tooltipster.css';
//  $form['#attached']['js'][] = drupal_get_path('module', 'ict_project') . '/js/jquery.tooltipster.min.js';
}


/**
 * Implement hook_preprocess().
 */
function ict_project_preprocess_ict_project_mid_project_form (&$variables){
  ict_project_add_status_tooltips ($variables['form']['field_mid_project_status']);
}


/**
 * Implement hook_preprocess().
 */
function ict_project_preprocess_ict_project_end_project_form (&$variables){
  ict_project_add_status_tooltips ($variables['form']['field_end_project_status']);
}

/**
 * Validates Project Users field
 *
 * @param $form
 * @param $form_state
 */
function ict_project_form_project_users_validate (&$form, &$form_state) {

  if (isset($_POST['edit-field-project-users-und'])) {
    foreach ($_POST['edit-field-project-users-und'] as $uid) {
      $form_state['values']['field_project_users'][LANGUAGE_NONE][] = array('uid' => $uid);
      $form['field_project_users'][LANGUAGE_NONE]['#default_value'][] = $uid;
      $form['field_project_users'][LANGUAGE_NONE]['#value'][] = $uid;
    }
  }

}

function get_project_updates($project_name) {
  $sql = 'SELECT DISTINCT d.name, s.timestamp, d.metric, d.value from "'.variable_get("ckan_resource_id").'"
              d join (select name,metric, max(timestamp) as timestamp from "'.variable_get("ckan_resource_id").'" GROUP BY name,metric) s on d.metric=s.metric and d.timestamp=s.timestamp
              WHERE d.name = \''.$project_name.'\'';
  $url = variable_get("ckan_url").'/api/action/datastore_search_sql?sql='.urlencode($sql);
  $request = drupal_http_request($url);
  $result = json_decode($request->data);
  $data = array();

  foreach ($result->result->records as $row) {
    if (!empty($row->value)) {
      $data[$row->metric][$row->timestamp] = $row->value;
    }
  }
  return $data;
}

/**
 * Implement hook_form_alter
 */
function ict_project_form_alter( &$form, &$form_state,$form_id){
  if($form_id == 'project_node_form') {
    // Removes _none option for Project Users field
    if (isset($form['field_project_users'][LANGUAGE_NONE]['#options']['_none'])) {
      unset($form['field_project_users'][LANGUAGE_NONE]['#options']['_none']);
    }

    $form['#validate'][] = 'ict_project_form_project_users_validate';
    ksort($form['field_project_stage']['und']['#options']);
    $form['#theme'] = 'ict_project_add_project_form';
    //hide native labels
    $form['field_government_entity_name']['und']['#title_display'] = $form['field_government_business_unit']['und'][0]['value']['#title_display'] =
    $form['title']['#title_display'] = $form['field_brief_project_summary']['und'][0]['#title_display'] =
    $form['field_program_name']['und'][0]['value']['#title_display'] = $form['field_project_stage']['und'][0]['value']['#title_display'] =
    $form['field_project_category']['und']['#title_display'] = $form['field_project_manager']['und'][0]['value']['#title_display'] =
    $form['field_project_manager_email']['und'][0]['value']['#title_display'] = $form['field_total_project_budget']['und'][0]['value']['#title_display'] =
    $form['field_expected_project_benefits']['und'][0]['value']['#title_display'] = $form['field_start_date']['und'][0]['value']['day']['#title_display'] =
    $form['field_start_date']['und'][0]['value']['month']['#title_display'] = $form['field_start_date']['und'][0]['value']['year']['#title_display'] =
    $form['field_original_completion_date']['und'][0]['value']['day']['#title_display'] = $form['field_original_completion_date']['und'][0]['value']['month']['#title_display'] =
    $form['field_original_completion_date']['und'][0]['value']['year']['#title_display'] = $form['field_government_programme']['und'][0]['value']['#title_display'] =
    $form['field_implementation_partners']['und'][0]['value']['#title_display'] = $form['field_total_spent_to_date']['und'][0]['value']['#title_display'] =
    $form['field_expected_number_of_gov_fte']['und'][0]['value']['#title_display'] = $form['field_expected_num_contractors']['und'][0]['value']['#title_display'] =
      'invisible';
    $form['field_brief_project_summary_fake'] = array(
      '#type' => 'text_format',
      '#title' => t('Description'),
      '#element_validate' => array('ict_project_update_project_description'),
      '#default_value' => $form['field_brief_project_summary']['und'][0]['#default_value'],
      '#required' => TRUE,
      '#title' => $form['field_brief_project_summary']['und'][0]['#title'],
      '#title_display' => 'invisible',
    );

    // Adds validation to the form
    $form['#validate'][] = 'ict_project_form_project_submission_validate';
    $form['field_brief_project_summary']['und'][0]['#required'] = FALSE;
    //
    $form['preview'] = array(
      '#type' => 'button',
      '#value' => t('Preview'),
      '#executes_submit_callback' => TRUE,
      '#submit' => array('ict_project_preview_submission'),
    );
  }

  if($form_id == 'ict_form_entityform_edit_form') {
    $default_project = ict_project_get_project_update();

    // Notification for user trying to update a Project that he don't have an access to
    __ict_project_check_user_allowed_update ($default_project);

    $form['mid_project_name_text'] = array(
      '#type' => 'item',
      '#title' => t('Project name'),
      '#markup' => $default_project['title'],
    );
    $form['field_mid_project_name']['und'][0]['value']['#type'] = 'hidden';
      $form['field_mid_project_name']['und'][0]['value']['#default_value'] = $default_project['title'];
      $form['field_mid_project_name'][LANGUAGE_NONE][0]['value']['#attributes']['disabled'] = TRUE;

      $form['#theme'] = 'ict_project_mid_project_form';
    $form['mid_project_name_text']['#title_display'] = $form['field_mid_project_stage']['und']['#title_display'] =            $form['field_mid_project_manager']['und'][0]['value']['#title_display'] =
    $form['field_mid_project_manager_email']['und'][0]['value']['#title_display'] =
    $form['field_mid_revised_total_project']['und'][0]['value']['#title_display'] =
    $form['field_mid_total_project_spend']['und'][0]['value']['#title_display'] =
    $form['field_mid_total_project_current']['und'][0]['value']['#title_display'] =
    $form['field_mid_project_completed']['und'][0]['value']['#title_display'] =
    $form['field_mid_predicted_project']['und'][0]['value']['#title_display'] =
    $form['field_mid_predicted_project_real']['und'][0]['value']['#title_display'] =
    $form['field_mid_internal_fte']['und'][0]['value']['#title_display'] =
    $form['field_mid_external_fte']['und'][0]['value']['#title_display'] =
    $form['field_mid_project_status']['und']['#title_display'] =
    $form['field_mid_agency_comments']['und'][0]['value']['#title_display'] =
    $form['field_mid_csv_file']['und'][0]['#title_display']
        = 'invisible';

    // Open the file for writing.
    $fields = array();
    $exclude = array('field_mid_csv_file', 'actions', 'form_build_id', 'form_token', 'form_id');
    $sort = array();
    foreach(element_children($form) as $field) {
      if(!in_array($field, $exclude)) {
        $sort[$field] = $form[$field]['#weight'];
      }
    }
    asort($sort);

    foreach($sort as $key=>$field) {
      $fields[] = $key;
    }

    $dir = variable_get('file_public_path', conf_path() . '/files');
    $file_path =  $dir . '/export.csv';
    $fh = fopen($file_path, 'w');
    fputcsv($fh, $fields);
    // Close & save the file.
    fclose($fh);
    file_unmanaged_copy($file_path, $destination = NULL, FILE_EXISTS_RENAME);

    $form['#attached']['js'] = array(
      drupal_get_path('module', 'ict_project') . '/js/ict_project.js',
    );

    $form['field_mid_project_status']['und']['#required'] = FALSE;
    $form['actions']['submit']['#submit'][] = 'ict_project_csv_submit_form_submit';
    $form['actions']['submit']['#validate'][] = 'ict_project_csv_validate';

    $form['preview'] = array(
      '#type' => 'button',
      '#value' => t('Preview'),
      '#executes_submit_callback' => TRUE,
      '#submit' => array('ict_project_preview_submission'),
      // Override error messages
      '#validate' => array('ict_project_csv_validate'),
    );

    __ict_project_update_project_default_values($form);

  }

  if($form_id == 'itc_form_end_entityform_edit_form') {
    $default_project = ict_project_get_project_update();

    // Notification for user trying to update a Project that he don't have an access to
    __ict_project_check_user_allowed_update ($default_project);

    $form['end_project_name_text'] = array(
      '#type' => 'item',
      '#title' => t('Project name'),
      '#markup' => $default_project['title'],
    );
    $form['field_end_project_name']['und'][0]['value']['#type'] = 'hidden';
    $form['field_end_project_name']['und'][0]['value']['#default_value'] = $default_project['title'];
    $form['field_end_project_name'][LANGUAGE_NONE][0]['value']['#attributes']['disabled'] = TRUE;

    $form['#theme'] = 'ict_project_end_project_form';
    $form['end_project_name_text']['#title_display'] =
    $form['field_end_project_stage']['und']['#title_display'] =
    $form['field_end_project_manager']['und'][0]['value']['#title_display'] =
    $form['field_end_project_manager_email']['und'][0]['value']['#title_display'] =
    $form['field_end_revised_total_project']['und'][0]['value']['#title_display'] =
    $form['field_end_total_project_spend']['und'][0]['value']['#title_display'] =
    $form['field_end_total_project_current']['und'][0]['value']['#title_display'] =
    $form['field_end_project_completed']['und'][0]['value']['#title_display'] =
    $form['field_end_predicted_project']['und'][0]['value']['#title_display'] =
    $form['field_end_predicted_realised']['und'][0]['value']['#title_display'] =
    $form['field_end_internal_fte']['und'][0]['value']['#title_display'] =
    $form['field_end_external_fte']['und'][0]['value']['#title_display'] =
    $form['field_end_project_status']['und']['#title_display'] =
    $form['field_end_agency_comments']['und'][0]['value']['#title_display'] =
    $form['field_end_csv_file']['und'][0]['#title_display'] =
      'invisible';

    ict_project_add_status_tooltips ($form['field_end_project_status']);

    // Open the file for writing.
    $fields = array();
    $sort = array();
    $exclude = array('field_end_csv_file', 'actions', 'form_build_id', 'form_token', 'form_id');
    foreach(element_children($form) as $field) {
      if(!in_array($field, $exclude)) {
        $sort[$field] = $form[$field]['#weight'];
      }
    }
    asort($sort);
    foreach($sort as $key=>$field) {
      if($key == 'field_end_predicted_budget') {
        $fields[] = 'opex-previous';
        $fields[] = 'capex-previous';

        $fields[] = 'opex-current';
        $fields[] = 'capex-current';

        $fields[] = 'opex-1';
        $fields[] = 'capex-1';

        $fields[] = 'opex-2';
        $fields[] = 'capex-2';

        $fields[] = 'opex-3';
        $fields[] = 'capex-3';
      }
      else {
        $fields[] = $key;
      }
    }

    $dir = variable_get('file_public_path', conf_path() . '/files');
    $file_path = $dir . '/export_end.csv';
    $fh = fopen($file_path, 'w');
    fputcsv($fh, $fields);
    // Close & save the file.
    fclose($fh);
    file_unmanaged_copy($file_path, $destination = NULL,  FILE_EXISTS_RENAME);


    $form['field_end_predicted_budget']['und']['#theme'] = 'ict_project_end_predicted_budget';

    // Start year should be set via CMS
    $start_year = variable_get('ict_dashboard_project_start_year', 13);

      /*$fybudget = Array();
      $years= Array();
      $total = 0;
      foreach ($project_updates as $key => $value) {
          if (strpos($key,'predicted_budget') !== false) {
              $keyParts = explode('_',str_replace('predicted_budget_','',$key));
              $year = $keyParts[0];
              $metric= $keyParts[1];
              $fybudget[$year][$metric] = reset($value);
              if ($metric == 'total') {
                  $total += reset($value);
              }
              if (array_search($year,$years) === false) {
                  $years[] = $year;
              }
          }
      }
      sort($years);*/

    foreach (element_children($form['field_end_predicted_budget']['und']) as $item) {
      foreach (element_children($form['field_end_predicted_budget']['und'][$item]) as $sub_item) {
        $form['field_end_predicted_budget']['und'][$item][$sub_item]['und'][0]['value']['#title_display'] = 'invisible';
      }
        $yearlabel = $start_year . '/' . ++$start_year;
      $form['field_end_predicted_budget']['und'][$item]['field_predicted_year']['und'][0]['value']['#value'] = $yearlabel;
        $year = 'fy'.str_replace('/','',$yearlabel);
        if (!empty($fybudget[$year]) && !empty($fybudget[$year]['opex'])) {
            $form['field_end_predicted_budget']['und'][$item]['field_predicted_opex']['und'][0]['value']['#value'] = $fybudget[$year]['opex'];
        }
        if (!empty($fybudget[$year]) && !empty($fybudget[$year]['capex'])) {
            $form['field_end_predicted_budget']['und'][$item]['field_predicted_capex']['und'][0]['value']['#value'] = $fybudget[$year]['capex'];
        }
        if (!empty($fybudget[$year]) && !empty($fybudget[$year]['total'])) {
            $form['field_end_predicted_budget']['und'][$item]['field_predicted_total']['und'][0]['value']['#value'] = $fybudget[$year]['total'];
        }
    }
    $form['#attached']['js'] = array(
      drupal_get_path('module', 'ict_project') . '/js/ict_project.js',
    );

    $form['field_end_project_status']['und']['#required'] = FALSE;
    $form['actions']['submit']['#submit'][] = 'ict_project_csv_submit_form_submit';
    $form['actions']['submit']['#validate'][] = 'ict_project_update_form_validate';
    // Override error messages
    $form['actions']['submit']['#validate'][] = '__ict_project_form_prepare_errors';
    $form['preview'] = array(
      '#type' => 'button',
      '#value' => t('Preview'),
      '#executes_submit_callback' => TRUE,
      '#submit' => array('ict_project_preview_submission'),
      '#validate' => array('ict_project_csv_submit_form_submit', 'ict_project_update_form_validate', '__ict_project_form_prepare_errors'),
    );

    __ict_project_update_project_default_values($form);
  }
}

/**
 * Custom validation for Project Update form
 *
 * @param $form
 * @param $form_state
 */
function ict_project_update_form_validate ($form, &$form_state) {
  __ict_project_form_fy_validation ($form['field_end_predicted_budget'][LANGUAGE_NONE], $form_state['values']['field_end_predicted_budget'][LANGUAGE_NONE], array('capex' => 'field_predicted_capex', 'opex' => 'field_predicted_opex'));
}

/**
 * Custom validation for Project Add form
 *
 * @param $form
 * @param $form_state
 */
function ict_project_form_project_submission_validate ($form, &$form_state) {
  // FY validation
  __ict_project_form_fy_validation ($form['field_original_total_budget'][LANGUAGE_NONE], $form_state['values']['field_original_total_budget'][LANGUAGE_NONE]);
//  __ict_project_form_fy_validation ($form['field_rebaselined_total_budget'][LANGUAGE_NONE], $form_state['values']['field_rebaselined_total_budget'][LANGUAGE_NONE]);

  // Override error messages
  __ict_project_form_prepare_errors($form, $form_state);
}

/**
 * Override and sort form errors
 */
function __ict_project_form_prepare_errors($form, &$form_state) {

  $errors_text = array(

    // Baseline form
    'field_government_entity_name' => t('Government department, agency, or organisation name is required'),
    'field_government_business_unit' => t('Section (business group, division, branch) of responsible government entity is required'),
    'field_program_name' => t(''),
    'title' => t('Project title is required'),
    'field_brief_project_summary_fake' => t('Description of project is required'),
    'field_implementation_partners' => t(''),
    'field_internal_fte' => t('Internal FTE is required'),
    'field_external_fte' => t('External FTE is required'),
    'field_start_date' => t('Original project start date is required'),
    'field_original_completion_date' => t('Original project completion date is required'),
    'field_rebaselined_project_start' => t(''),
    'field_rebaselined_project_compl' => t(''),
    'field_project_stage' => t('Default to `Start up`'),
    'field_project_category' => t('Project category is required'),
    'field_expenditure_type' => t('Default to `Departmental`'),
    'field_project_manager' => t('Project manager name and email address is required'),
    'field_project_manager_email' => t('Project manager name and email address is required'),
    'field_total_project_budget' => t('Original total project budget is required'),
    'field_original_total_budget' => t('Original total project budget by FY is required'),
    'field_rebaselined_total_project' => t(''),
    'field_rebaselined_total_budget' => t('Rebaselined total project budget by FY is required'),
    'field_predicted_project_benefit' => t('Predicted project benefit is required'),
    'field_project_status' => t('Project status is required'),

     // Project update MID year
    'field_mid_project_stage' => t('Project stage is required'),
    'field_mid_project_manager' => t('Project manager name and email address is required'),
    'field_mid_project_manager_email' => t('Project manager name and email address is required'),
    'field_mid_expected_project' => t('Expected project completion date is required'),
    'field_mid_internal_fte' => t('Internal FTE is required'),
    'field_mid_external_fte' => t('External FTE is required'),
    'field_mid_revised_total_project' => t('Revised total project budget is required'),
    'field_mid_total_project_spend' => t('Total project spend to date is required'),
    'field_mid_total_project_current' => t('Total project spend current finance year is required'),
    'field_mid_project_completed' => t('% of project completed is required'),
    'field_mid_predicted_project' => t('Predicted project benefit is required'),
    'field_mid_predicted_project_real' => t('% of predicted project benefit realised is required'),
    'field_mid_project_status' => t('Project status is required'),
    'field_mid_agency_comments' => t(''),

    // Project update END year
    'field_end_project_stage' => t('Project stage is required'),
    'field_end_expected_project' => t('Expected project completion date is required'),
    'field_end_internal_fte' => t('Internal FTE is required'),
    'field_end_external_fte' => t('External FTE is required'),
    'field_end_project_manager' => t('Project manager name and email address is required'),
    'field_end_project_manager_email' => t('Project manager name and email address is required'),
    'field_end_revised_total_project' => t('Revised total project budget is required'),
    'field_end_total_project_spend' => t('Total project spend to date is required'),
    'field_end_total_project_current' => t('Total project spend current finance year is required'),
    'field_end_predicted_budget' => t('Total project budget by FY (predicted and past) is required'),
    'field_end_project_completed' => t('% of project completed is required'),
    'field_end_predicted_project' => t('Predicted project benefit is required'),
    'field_end_predicted_realised' => t('% of predicted project benefit realised is required'),
    'field_end_project_status' => t('Project status is required '),
    'field_end_agency_comments' => t(''),
  );

  $errs = form_get_errors();
  form_clear_error();
  drupal_get_messages('error');

  foreach ($errors_text as $key => $text) {
    foreach ($errs as $err_key => $err_txt) {
      if (strpos($err_key, $key . ']') !== FALSE || $key == $err_key) {
        if (strpos($errs[$err_key], t('required')) !== FALSE && !empty($text)) {
          form_set_error($key, $text);
        }
        else {
          form_set_error($err_key, $err_txt);
        }
        unset($errs[$err_key]);
      }
    }
  }
  foreach ($errs as $key => $text) {
    form_set_error($key, $text);
  }
}

/**
 * Validates FY fields
 *
 * @param $elements
 * @param $elemets_values
 * @param $required
 */
function __ict_project_form_fy_validation ($elements, &$elements_values, $required = array('capex' => 'field_capex', 'opex' => 'field_opex')) {
  $valid = FALSE;
  foreach ($elements_values as $element) {
    if ($element[$required['opex']][LANGUAGE_NONE][0]['value'] || $element[$required['opex']][LANGUAGE_NONE][0]['value']) {
      $valid = TRUE;
      break;
    }
  }

  if (!$valid) {
    form_set_error($elements['#field_name'], t('!title total project budget by FY is required', array('!title' => $elements['#title'])));
  }
}

function ict_project_update_project_description($element, &$form_state, $form) {
  $form_state['values']['field_brief_project_summary']['und'][0]['value'] = filter_xss($form_state['values']['field_brief_project_summary_fake']['value']);
}
/*
 * Implements hook_node_presave().
 */
function ict_project_node_presave($node) {
  if ($node->type == 'project') {
    global $user;

    $checked_users = array();
    foreach ($node->field_project_users[LANGUAGE_NONE] as $item) {
      $checked_users[] = $item['uid'];
    }

    if (!$checked_users || !in_array($user->uid, $checked_users)) {
      $node->field_project_users[LANGUAGE_NONE][] = array('uid' => $user->uid);
    }
  }
}

function __ict_project_check_user_allowed_update ($project) {
  global $user;

  $node = node_load($project['nid']);

  if (!isset($node->type) || $node->type != 'project') {
    drupal_set_message(t('Project not found'), 'error');
    drupal_goto('projects');
  }

  $allowed_users = array();
  foreach ($node->field_project_users[LANGUAGE_NONE] as $item) {
    $allowed_users[] = $item['uid'];
  }

  if (!$user->name || !in_array($user->uid, $allowed_users)) {
    drupal_set_message(t('You are not allowed to update "!title"', array('title' => $project['title'])), 'error');
    drupal_goto('projects');
  }
}


/**
 * Implements hook_theme().
 */
function ict_project_theme () {
  return array(
    'ict_project_add_project_form' => array(
      'template' => 'ict_project_add_project_form',
      'path' => drupal_get_path('module', 'ict_project') . '/theme',
      'render element' => 'form',
    ),
    'ict_project_rebaselined_total_budget' => array(
      'template' => 'ict_project_rebaselined_total_budget',
      'path' => drupal_get_path('module', 'ict_project') . '/theme',
      'render element' => 'element',
    ),
    'ict_project_end_predicted_budget' => array(
      'template' => 'ict_project_end_predicted_budget',
      'path' => drupal_get_path('module', 'ict_project') . '/theme',
      'render element' => 'element',
    ),
    'ict_project_mid_project_form' => array(
      'template' => 'ict_project_mid_project_form',
      'path' => drupal_get_path('module', 'ict_project') . '/theme',
      'render element' => 'form',
    ),
    'ict_project_end_project_form' => array(
      'template' => 'ict_project_end_project_form',
      'path' => drupal_get_path('module', 'ict_project') . '/theme',
      'render element' => 'form',
    ),
    'ict_project_review' => array(
      'path' => drupal_get_path('module', 'ict_project') . '/theme',
      'template' => 'ict_project_review_page',
      'variables' => array('form' => NULL),
    ),
    'ict_project_review_end' => array(
      'path' => drupal_get_path('module', 'ict_project') . '/theme',
      'template' => 'ict_project_review_page_end',
      'variables' => array('form' => NULL),
    ),
    'ict_project_review_project' => array(
      'path' => drupal_get_path('module', 'ict_project') . '/theme',
      'template' => 'ict_project_review_page_project',
      'variables' => array('form' => NULL),
    ),
  );
}

/**
 * Implements_hook_menu
 */
function ict_project_menu() {
  $items = array();

  $items['admin/config/project-form-settings'] = array(
    'title' => 'Project form settings',
    'description' => 'Settings page for Project form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ict_project_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );


  $items['review-submission/%'] = array(
    'title' => 'Review form',
    'page callback' => 'ict_project_review_page',
    'access callback' => TRUE,
    'page arguments' => array(1),
  );


  return $items;
}


function ict_project_review_page($arg) {
  drupal_add_js ('(function ($) {
  $("a.back").click(function(){
     parent.history.back();
     return false;
       });
    })(jQuery);',array('type' => 'inline','scope' => 'footer','weight' =>5));

  if(isset($_SESSION['review_submission']) || $arg == 'update') {
    $form = $_SESSION['review_submission'];
    if($form['form']['#form_id'] == 'ict_form_entityform_edit_form') {
      return theme('ict_project_review', $form);
    }
    else {
      return theme('ict_project_review_end', $form);
    }
  }

  if(isset($_SESSION['review_project']) || $arg == 'project') {
    $form = $_SESSION['review_project'];
    return theme('ict_project_review_project', $form);
  }

  return drupal_not_found();
}

/**
 * Module configurations form
 */
function ict_project_admin_settings_form($form, &$form_state) {
  $form['ict_dashboard_project_start_year'] = array(
    '#type' => 'textfield',
    '#title' => t('Project start year'),
    '#default_value' => variable_get('ict_dashboard_project_start_year', 13),
    '#size' => 2,
    '#maxlength' => 2,
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/*
 * Return all project
 */
function ict_project_get_project() {
  global $user;
  $query = db_select('node', 'n');
  $query->innerJoin('field_data_field_project_users', 'fpu', 'n.nid = fpu.entity_id');
  $query ->fields('n', array('nid', 'title'));
  $query->condition('n.type', 'project');
  $query->condition('n.status', 1);
  $query->condition('fpu.field_project_users_uid', $user->uid);
  $projects = $query->execute()->fetchAllKeyed();

  return $projects;
}

function ict_project_bracket_italics ($string) {
  $string = str_replace('(','<em>(',$string);
  $string = str_replace(')',')</em>',$string);
  return $string;
}

/*
 * Implements hook_node_insert()
 */
function ict_project_node_insert (&$node) {
  if ($node->type == 'project') {
    $node->status = 1;
  }
}



function ict_project_get_project_update() {
  $projects = array(
    'title' => '',
    'nid' => ''
  );

  if (isset($_GET['project'])) {

    $query = db_select('node', 'n');
    $query->fields('n', array('title'));
    $query->condition('n.type', 'project');
    $query->condition('n.nid', $_GET['project']);
    $node = $query->execute()->fetchField();

    $projects = array(
      'title' => $node,
      'nid' => $_GET['project']
    );

  }

  return $projects;
}

function ict_project_csv_submit_form_submit($form, &$form_state) {
  //Load file
  if($form['#form_id'] == 'itc_form_end_entityform_edit_form') {
    $file_field = 'field_end_csv_file';
  }else{
    $file_field = 'field_mid_csv_file';
  }

  $fid = $form_state['values'][$file_field][LANGUAGE_NONE][0]['fid'];
  $csv_file = file_load($fid);
  if(!empty($csv_file)) {
    //Open csv
    $handle = fopen($csv_file->uri, 'r');
    $row = fgetcsv($handle);
    //Read columns
    $columns = array();
    foreach ($row as $i => $header) {
      $columns[$i] = trim($header);
    }

    //Read value and filled field form - form state
    while ($row = fgetcsv($handle)) {
      foreach ($row as $i => $field) {
        switch ($columns[$i]) {
          case 'field_mid_project_stage':
          case 'field_mid_project_status':
          case 'field_end_project_stage':
          case 'field_end_project_status':
            $form_state['input'][$columns[$i]][LANGUAGE_NONE] = $field;
            break;
          case 'field_mid_expected_project':
          case 'field_end_expected_project':
            $date = explode('/', $field);
            $form_state['input'][$columns[$i]][LANGUAGE_NONE][0]['value']['day'] = $date[0];
            $form_state['input'][$columns[$i]][LANGUAGE_NONE][0]['value']['month'] = $date[1];
            $form_state['input'][$columns[$i]][LANGUAGE_NONE][0]['value']['year'] = $date[2];
            break;
          //field collection
          case 'opex-previous':
            $form_state['input']['field_end_predicted_budget'][LANGUAGE_NONE][0]['field_predicted_opex']['und'][0]['value'] = $field;
            break;
          case 'capex-previous':
            $form_state['input']['field_end_predicted_budget'][LANGUAGE_NONE][0]['field_predicted_capex']['und'][0]['value'] = $field;
            break;
          //14/15
          case 'opex-current':
            $form_state['input']['field_end_predicted_budget'][LANGUAGE_NONE][0]['field_predicted_opex']['und'][1]['value'] = $field;
            break;
          case 'capex-current':
            $form_state['input']['field_end_predicted_budget'][LANGUAGE_NONE][0]['field_predicted_capex']['und'][1]['value'] = $field;
            break;
          //15/16
          case 'opex-1':
            $form_state['input']['field_end_predicted_budget'][LANGUAGE_NONE][0]['field_predicted_opex']['und'][2]['value'] = $field;
            break;
          case 'capex-1':
            $form_state['input']['field_end_predicted_budget'][LANGUAGE_NONE][0]['field_predicted_capex']['und'][2]['value'] = $field;
            break;
          //16/17
          case 'opex-2':
            $form_state['input']['field_end_predicted_budget'][LANGUAGE_NONE][0]['field_predicted_opex']['und'][3]['value'] = $field;
            break;
          case 'capex-2':
            $form_state['input']['field_end_predicted_budget'][LANGUAGE_NONE][0]['field_predicted_capex']['und'][3]['value'] = $field;
            break;
          //17/18
          case 'opex-3':
            $form_state['input']['field_end_predicted_budget'][LANGUAGE_NONE][0]['field_predicted_opex']['und'][4]['value'] = $field;
            break;
          case 'capex-3':
            $form_state['input']['field_end_predicted_budget'][LANGUAGE_NONE][0]['field_predicted_capex']['und'][4]['value'] = $field;
            break;
          default:
            $form_state['input'][$columns[$i]][LANGUAGE_NONE][0]['value'] = $field;
        }
      }
    }
    drupal_set_message(t('You\'ve successfully submitted form via CSV'));
  }

}


function ict_project_csv_validate($form, &$form_state) {

  if($form['#form_id'] == 'itc_form_end_entityform_edit_form') {
    $file_field = 'field_end_csv_file';
  }else{
    $file_field = 'field_mid_csv_file';
  }

  $fid = $form_state['values'][$file_field][LANGUAGE_NONE][0]['fid'];
  $csv_file = file_load($fid);
  if(!empty($csv_file)) {
    $project_stage = array('start_up', 'initiation', 'controlling', 'closing');
    $project_status = array('green', 'amber', 'red');

    //Open csv
    $handle = fopen($csv_file->uri, 'r');
    $row = fgetcsv($handle);
    //Read columns
    $columns = array();
    foreach ($row as $i => $header) {
      $columns[$i] = trim($header);
    }

    //Read value and filled field form - form state
    while ($row = fgetcsv($handle)) {
      foreach ($row as $i => $field_value) {
        switch ($columns[$i]) {
          //mail
          case 'field_mid_project_manager_email':
          case 'field_end_project_manager_email':

              if(!valid_email_address($field_value)) {
                form_set_error('Email', t('Email not valid.'));
              }
          break;
          //integer
          case 'field_mid_revised_total_project':
          case 'field_mid_total_project_spend':
          case 'field_mid_total_project_current':
          case 'field_mid_project_completed':
          case 'field_mid_predicted_project':
          case 'field_mid_predicted_project_real':
          case 'field_mid_internal_fte':
          case 'field_mid_external_fte':
            if (!is_numeric($field_value) && $field_value <= 0) {
              form_set_error('Field', t('Please provide a positive integer.'));
            }
          break;
          //date
          case 'field_mid_expected_project':
          case 'field_end_expected_project':
            if(!ict_project_validate_date($field_value)) {
              form_set_error('Date', t('Please valid format date d/m/Y.'));
            }
          break;
          case 'field_mid_project_stage':
          case 'field_end_project_stage':
            if(!in_array($field_value, $project_stage)) {
              form_set_error('Project stage', t('Please valid Project stage value.'));
            }
            break;

          case 'field_mid_project_status':
          case 'field_end_project_status':
            if(!in_array($field_value, $project_status)) {
              form_set_error('Project status', t('Please valid Project status value.'));
            }
            break;

          default;

        }
      }
    }

    //form_error($form, t('CSV empty.'));
    $errors = form_get_errors();
    if($errors) {
     $file = file_load($form_state['complete form']['field_mid_csv_file']['und'][0]['#value']['fid']);
     file_delete($file);
      unset($form_state['complete form']['field_mid_csv_file']['und'][0]['fid']);
      unset($form_state['complete form']['field_mid_csv_file']['und'][0]['#file']);
      unset($form_state['complete form']['field_mid_csv_file']['und'][0]['#value']);
      unset($form_state['complete form']['field_mid_csv_file']['und'][0]['filename']);
      //$form['field_mid_project_manager']['und'][0]['value']['#value'] = 's';
      //$form['field_mid_project_manager']['und'][0]['value']['#default_value'] = 's2';
    }
    form_set_value($form['field_mid_project_manager'], array(0 => array('value' => 's')), $form_state);

  }
  // Override error messages
  __ict_project_form_prepare_errors($form, $form_state);
}

/**
 * Validates date
 *
 * @param $date
 * @return bool
 */
function ict_project_validate_date($date) {
  $d = DateTime::createFromFormat('d/m/Y', $date);
  return $d && $d->format('d/m/Y') == $date;
}


function ict_project_preview_submission($form, &$form_state) {
  if($form['#form_id'] == 'project_node_form') {
    $_SESSION['review_project'] = array('form' => $form, 'form_state' => $form_state);
    $form_state['redirect'] = 'review-submission/project';
  }
  else {
    $_SESSION['review_submission'] = array('form' => $form, 'form_state' => $form_state);
    $form_state['redirect'] = 'review-submission/update';
  }
}

function ict_project_review_form($form, &$form_state) {

  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Preview'),
    '#submit' => array('ict_project_review_submission'),
  );

  return $form;
}

function ict_project_review_end_form($form, &$form_state) {

  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#submit' => array('ict_project_review_end_submission'),
  );

  return $form;
}

function ict_project_review_project_form($form, &$form_state) {
  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#submit' => array('ict_project_review_project_submission'),
  );

  return $form;
}

function ict_project_review_submission($form, &$form_state) {
  if(isset($_SESSION['review_submission'])) {
    $entityform = entity_create('entityform', array(
      'type' => "ict_form",
      'created' => time(),
      'changed' => time(),
      'language' => LANGUAGE_NONE,
      'uid' => 1
    ));

    $wrapper = entity_metadata_wrapper('entityform', $entityform);
    $values = $_SESSION['review_submission']['form_state'];
    // And set the fields.
    $wrapper->field_mid_project_name = $values['input']['field_mid_project_name']['und'][0]['value'];
    $wrapper->field_mid_project_stage = ($values['input']['field_mid_project_stage']['und']) ? $values['input']['field_mid_project_stage']['und'] : '_none';
    $wrapper->field_mid_project_manager = ($values['input']['field_mid_project_manager']['und'][0]['value']) ? $values['input']['field_mid_project_manager']['und'][0]['value'] : NULL;
    $wrapper->field_mid_project_manager_email = ($values['input']['field_mid_project_manager_email']['und'][0]['value']) ? $values['input']['field_mid_project_manager_email']['und'][0]['value'] : NULL;
    $wrapper->field_mid_revised_total_project = ($values['input']['field_mid_revised_total_project']['und'][0]['value']) ? $values['input']['field_mid_revised_total_project']['und'][0]['value'] : NULL;
    $wrapper->field_mid_expected_project = $values['values']['field_mid_expected_project']['und'][0]['value'] ? strtotime($values['values']['field_mid_expected_project']['und'][0]['value']) : NULL;
    $wrapper->field_mid_total_project_spend = ($values['input']['field_mid_total_project_spend']['und'][0]['value']) ? $values['input']['field_mid_total_project_spend']['und'][0]['value'] : NULL;

    $wrapper->field_mid_total_project_current = ($values['input']['field_mid_total_project_current']['und'][0]['value']) ? $values['input']['field_mid_total_project_current']['und'][0]['value'] : NULL;
    $wrapper->field_mid_project_completed = ($values['input']['field_mid_project_completed']['und'][0]['value']) ? $values['input']['field_mid_project_completed']['und'][0]['value'] : NULL;
    $wrapper->field_mid_predicted_project = ($values['input']['field_mid_predicted_project']['und'][0]['value']) ? $values['input']['field_mid_predicted_project']['und'][0]['value'] : NULL;
    $wrapper->field_mid_predicted_project_real = ($values['input']['field_mid_predicted_project_real']['und'][0]['value']) ? $values['input']['field_mid_predicted_project_real']['und'][0]['value'] : NULL;
    $wrapper->field_mid_internal_fte = ($values['input']['field_mid_internal_fte']['und'][0]['value']) ? $values['input']['field_mid_internal_fte']['und'][0]['value'] : NULL;
    $wrapper->field_mid_external_fte = ($values['input']['field_mid_external_fte']['und'][0]['value']) ? $values['input']['field_mid_external_fte']['und'][0]['value'] : NULL;
    $wrapper->field_mid_project_status = ($values['input']['field_mid_project_status']['und']) ? $values['input']['field_mid_project_status']['und'] : '_none';
    $wrapper->field_mid_agency_comments = ($values['input']['field_mid_agency_comments']['und'][0]['value']) ? $values['input']['field_mid_agency_comments']['und'][0]['value'] : NULL;
    $wrapper->save();
    unset($_SESSION['review_submission']);
    drupal_set_message(t('Thank you, your submission has been received.'));
    drupal_goto('projects');
  }
}


function ict_project_review_end_submission($form, &$form_state) {
  if(isset($_SESSION['review_submission'])) {

    $entityform = entity_create('entityform', array(
      'type' => "itc_form_end",
      'created' => time(),
      'changed' => time(),
      'language' => LANGUAGE_NONE,
      'uid' => 1
    ));
    $wrapper = entity_metadata_wrapper('entityform', $entityform);
    $values = $_SESSION['review_submission']['form_state'];
    $wrapper->field_end_project_name = $values['input']['field_end_project_name']['und'][0]['value'];
    $wrapper->field_end_project_stage = ($values['input']['field_end_project_stage']['und']) ? $values['input']['field_end_project_stage']['und'] : '_none';
    $wrapper->field_end_project_manager = ($values['input']['field_end_project_manager']['und'][0]['value']) ? $values['input']['field_end_project_manager']['und'][0]['value'] : NULL;
    $wrapper->field_end_project_manager_email = ($values['input']['field_end_project_manager_email']['und'][0]['value']) ? $values['input']['field_end_project_manager_email']['und'][0]['value'] : NULL;
    $wrapper->field_end_revised_total_project = ($values['input']['field_end_revised_total_project']['und'][0]['value']) ? $values['input']['field_end_revised_total_project']['und'][0]['value'] : NULL;
    $wrapper->field_end_expected_project = $values['values']['field_end_expected_project']['und'][0]['value'] ? strtotime($values['values']['field_end_expected_project']['und'][0]['value']) : NULL;
    $wrapper->field_end_total_project_spend = ($values['input']['field_end_total_project_spend']['und'][0]['value']) ? $values['input']['field_end_total_project_spend']['und'][0]['value'] : NULL;
    $wrapper->field_end_total_project_current = ($values['input']['field_end_total_project_current']['und'][0]['value']) ? $values['input']['field_end_total_project_current']['und'][0]['value'] : NULL;
    $wrapper->field_end_project_completed = ($values['input']['field_end_project_completed']['und'][0]['value']) ? $values['input']['field_end_project_completed']['und'][0]['value'] : NULL;
    $wrapper->field_end_predicted_project = ($values['input']['field_end_predicted_project']['und'][0]['value']) ? $values['input']['field_end_predicted_project']['und'][0]['value'] : NULL;
    $wrapper->field_end_predicted_realised = ($values['input']['field_end_predicted_realised']['und'][0]['value']) ? $values['input']['field_end_predicted_realised']['und'][0]['value'] : NULL;
    $wrapper->field_end_internal_fte = ($values['input']['field_end_internal_fte']['und'][0]['value']) ? $values['input']['field_end_internal_fte']['und'][0]['value'] : NULL;
    $wrapper->field_end_external_fte = ($values['input']['field_end_external_fte']['und'][0]['value']) ? $values['input']['field_end_external_fte']['und'][0]['value'] : NULL;
    $wrapper->field_end_project_status = ($values['input']['field_end_project_status']['und']) ? $values['input']['field_end_project_status']['und'] : '_none';
    $wrapper->field_end_agency_comments = ($values['input']['field_end_agency_comments']['und'][0]['value']) ? $values['input']['field_end_agency_comments']['und'][0]['value'] : NULL;
    $wrapper->save();

    $budget = $values['values']['field_end_predicted_budget'][LANGUAGE_NONE];
    foreach($budget as $row) {
      // Create a new field collection
      $field_collection_item = entity_create('field_collection_item', array('field_name' => 'field_end_predicted_budget'));
      $field_collection_item->setHostEntity('itc_form_end', $entityform);

      // Load items into field collection
      $field_collection_item->field_predicted_capex[LANGUAGE_NONE][0]['value'] = $row['field_predicted_capex'][LANGUAGE_NONE][0]['value'];
      $field_collection_item->field_predicted_opex[LANGUAGE_NONE][0]['value'] = $row['field_predicted_opex'][LANGUAGE_NONE][0]['value'];
      $field_collection_item->field_predicted_total[LANGUAGE_NONE][0]['value'] = $row['field_predicted_total'][LANGUAGE_NONE][0]['value'];

       // Save field collection item
       $field_collection_item->save();
    }
    unset($_SESSION['review_submission']);
    drupal_set_message(t('Thank you, your submission has been received.'));
    drupal_goto('projects');
  }
}

function __ict_project_update_project_default_values (&$form) {
  if (!is_numeric($_GET['project']) || !$project = node_load($_GET['project'])) {
    return;
  }
  $project_wrapper = entity_metadata_wrapper('node', $project);

    $project_updates = get_project_updates($project->title);

    if (empty($project_updates['project_manager'])) {
        $manager = $project_wrapper->field_project_manager->value();
    } else {
        $manager = reset($project_updates['project_manager']);
    }
    if (empty($project_updates['project_manager_email'])) {
        $manager_mail = $project_wrapper->field_project_manager_email->value();
    } else {
        $manager_mail = reset($project_updates['project_manager_email']);
    }
    if (empty($project_updates['project_stage'])) {
        $stage = $project_wrapper->field_project_stage->value()->name;
    } else {
        $stage = reset($project_updates['project_stage']);
    }
    if (empty($project_updates['expected_project'])) {
        if (empty($project->field_field_rebaselined_project_compl['und'][0]['value'])) {
            $completion_date = $project->field_original_completion_date['und'][0]['value'];
        } else {
            $completion_date = $project->field_field_rebaselined_project_compl['und'][0]['value'];
        }
    } else {
      $completion_date  = reset($project_updates['expected_project']);
    }

    if (empty($project_updates['revised_total_project'])) {
        if(empty($project->field_field_rebaselined_total_project['und'][0]['value'])) {
            $total_budget = $project_wrapper->field_total_project_budget->value();
        } else {
            $total_budget = $project_wrapper->field_rebaselined_total_project->value();
        }
    } else {
      $total_budget = (int)reset($project_updates['revised_total_project']);
    }
    if (empty($project_updates['predicted_project_benefit'])) {
      $predicted_benefit = $project_wrapper->field_predicted_project_benefit->value();
    } else {
      $predicted_benefit = reset($project_updates['predicted_project_benefit']);
    }
    if (!empty($project_updates['project_status'])) {
        $status = reset($project_updates['project_status']);
    }

  if ($form['#entity']->type == 'ict_form') {
    if (!empty($stage)) {
        if (!empty($form['field_mid_project_stage']['und']['#options'][$stage])) {
         $stage_val = $stage;
        } else {
            $stage_val = array_search($stage, $form['field_mid_project_stage']['und']['#options']);
        }
      if (!empty($stage_val)) {
        $form['field_mid_project_stage']['und']['#default_value'] = $stage_val;
      }
    }
    if (!empty($manager)) {
      $form['field_mid_project_manager']['und'][0]['value']['#default_value'] = $manager;
    }
    if (!empty($manager_mail)) {
      $form['field_mid_project_manager_email']['und'][0]['value']['#default_value'] = $manager_mail;
    }
    if (!empty($completion_date)) {
      $form['field_mid_expected_project']['und'][0]['#default_value']['value'] = $completion_date;
        $form['field_mid_expected_project']['und'][0]['#default_value']['value2'] = $completion_date;
    }
    if (!empty($total_budget)) {
      $form['field_mid_revised_total_project']['und'][0]['value']['#default_value'] = $total_budget;
    }
    if (!empty($predicted_benefit)) {
      $form['field_mid_predicted_project']['und'][0]['value']['#default_value'] = $predicted_benefit;
    }
  }
  elseif ($form['#entity']->type == 'itc_form_end') {
      if (!empty($stage)) {
          if (!empty($form['field_end_project_stage']['und']['#options'][$stage])) {
              $stage_val = $stage;
          } else {
              $stage_val = array_search($stage, $form['field_end_project_stage']['und']['#options']);
          }
          if (!empty($stage_val)) {
        $form['field_end_project_stage']['und']['#default_value'] = $stage_val;
      }
    }
    if (!empty($manager)) {
      $form['field_end_project_manager']['und'][0]['value']['#default_value'] = $manager;
    }
    if (!empty($manager_mail)) {
      $form['field_end_project_manager_email']['und'][0]['value']['#default_value'] = $manager_mail;
    }
    if (!empty($completion_date)) {
      $form['field_end_expected_project']['und'][0]['#default_value']['value'] = $completion_date;
        $form['field_end_expected_project']['und'][0]['#default_value']['value2'] = $completion_date;
    }
    if (!empty($total_budget)) {
      $form['field_end_revised_total_project']['und'][0]['value']['#default_value'] = $total_budget;
    }
    if (!empty($predicted_benefit)) {
      $form['field_end_predicted_project']['und'][0]['value']['#default_value'] = $predicted_benefit;
    }
    if (!empty($status)) {
        $form['field_end_project_status'][LANGUAGE_NONE]['#default_value'] = $status;
    }
  }
}

function ict_project_review_project_submission($form, &$form_state) {
  if(isset($_SESSION['review_project'])) {
    $fs = $_SESSION['review_project']['form_state'];
    $values = $fs['values'];

    $node = new stdClass();
    $node->type = 'project';
    node_object_prepare($node);
    $node->title    = $values['title'];
    $node->language = LANGUAGE_NONE;
    $node->field_government_entity_name[$node->language][0]['value'] = $values['field_government_entity_name'][LANGUAGE_NONE][0]['value'];

    $node->field_government_business_unit[$node->language][0]['value'] = $values['field_government_business_unit'][LANGUAGE_NONE][0]['value'];

    $node->field_program_name[$node->language][0]['value'] = $values['field_program_name'][LANGUAGE_NONE][0]['value'];

    $node->field_brief_project_summary[$node->language][0]['value'] = $values['field_brief_project_summary'][LANGUAGE_NONE][0]['value'];

    //fc
    foreach($values['field_implementation_partners']['und'] as $key=>$p) {
      if($key !== 'add_more') {
        $node->field_implementation_partners[$node->language][$key]['value'] = $p['value'];
      }
    }

    $node->field_internal_fte[$node->language][0]['value'] = $values['field_internal_fte'][LANGUAGE_NONE][0]['value'];

    $node->field_external_fte[$node->language][0]['value'] = $values['field_external_fte'][LANGUAGE_NONE][0]['value'];

    //date
    $node->field_start_date[$node->language][0]['value'] = $values['field_start_date']['und'][0]['value'];
    $node->field_rebaselined_project_start[$node->language][0]['value'] = $values['field_rebaselined_project_start']['und'][0]['value'];
    $node->field_rebaselined_project_compl[$node->language][0]['value'] = $values['field_rebaselined_project_compl']['und'][0]['value'];
    $node->field_original_completion_date[$node->language][0]['value'] = $values['field_original_completion_date']['und'][0]['value'];

    //
    $node->field_project_stage[$node->language][0]['tid'] = $values['field_project_stage'][LANGUAGE_NONE][0]['tid'];
    $node->field_project_category[$node->language][0]['tid'] = $values['field_project_category'][LANGUAGE_NONE][0]['tid'];

    $node->field_expenditure_type[$node->language][0]['value'] = $values['field_expenditure_type'][LANGUAGE_NONE][0]['value'];

    $node->field_project_manager[$node->language][0]['value'] = $values['field_project_manager'][LANGUAGE_NONE][0]['value'];

    $node->field_project_manager_email[$node->language][0]['email'] = $values['field_project_manager_email'][LANGUAGE_NONE][0]['email'];

    $node->field_total_project_budget[$node->language][0]['value'] = $values['field_total_project_budget'][LANGUAGE_NONE][0]['value'];

     $node->field_rebaselined_total_project[$node->language][0]['value'] = $values['field_rebaselined_total_project'][LANGUAGE_NONE][0]['value'];


    $node->field_predicted_project_benefit[$node->language][0]['value'] = $values['field_predicted_project_benefit'][LANGUAGE_NONE][0]['value'];

    $node->field_project_status[$node->language][0]['value'] = $values['field_project_status'][LANGUAGE_NONE][0]['value'];

    //Users
  foreach($values['field_project_users'][LANGUAGE_NONE] as $key=>$row) {
    if($row['uid']) {
      $node->field_project_users[LANGUAGE_NONE][$key]['uid'] = $row['uid'];
    }
  }
    node_save($node);

    // Create and save field collection for node
    $budget_r = $values['field_rebaselined_total_budget'][LANGUAGE_NONE];
    foreach($budget_r as $key=>$b) {
    $field_collection_item = entity_create('field_collection_item', array('field_name' => 'field_original_total_budget'));
    $field_collection_item->setHostEntity('node', $node);
      $field_collection_item->field_year[LANGUAGE_NONE][$key]['value'] = $b['field_year']['und'][0]['value'];
      $field_collection_item->field_opex[LANGUAGE_NONE][$key]['value'] = $b['field_opex']['und'][0]['value'];
      $field_collection_item->field_capex[LANGUAGE_NONE][$key]['value'] = $b['field_capex']['und'][0]['value'];
      $field_collection_item->field_total[LANGUAGE_NONE][$key]['value'] = $b['field_total']['und'][0]['value'];;
    $field_collection_item->save();
    }

    $budget_b = $values['field_rebaselined_total_budget'][LANGUAGE_NONE];
    foreach($budget_b as $key=>$b) {
      $field_collection_item = entity_create('field_collection_item', array('field_name' => 'field_rebaselined_total_budget'));
      $field_collection_item->setHostEntity('node', $node);
      $field_collection_item->field_year[LANGUAGE_NONE][$key]['value'] = $b['field_year']['und'][0]['value'];
      $field_collection_item->field_opex[LANGUAGE_NONE][$key]['value'] = $b['field_opex']['und'][0]['value'];
      $field_collection_item->field_capex[LANGUAGE_NONE][$key]['value'] = $b['field_capex']['und'][0]['value'];
      $field_collection_item->field_total[LANGUAGE_NONE][$key]['value'] = $b['field_total']['und'][0]['value'];;
      $field_collection_item->save();
    }
    unset($_SESSION['review_project']);
    drupal_goto('projects');
  }
}
